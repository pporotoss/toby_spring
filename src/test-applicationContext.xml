<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/testdb" />
		<property name="username" value="study" />
		<property name="password" value="study" />
	</bean>
	
	<bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- <bean id="userService" class="springbook.user.service.TxProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="userServiceImpl" />
		<property name="pattern" value="upgradeLevels"/>
		<property name="serviceInterface" value="springbook.user.service.UserService"/>
	</bean> -->
		
	<bean id="userService" class="springbook.user.service.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
		<property name="mailSender" ref="mailSender"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean id="transactionAdvice" class="springbook.user.service.TransactionAdvice"><!-- 부가기능인 트랜잭션 처리를 해주는 어드바이스 -->
		<property name="transactionManager" ref="transactionManager"/>
	</bean>
	
	<!-- <bean id="transactionPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">이름으로 메서드를 선별하는 포인트컷
		<property name="mappedName" value="upgrade*"/>
	</bean> -->
	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/><!-- 어드바이저를 자동으로 검색하여 적용하는 자동 프록시 생성기 -->
	
	<!-- NameMatchMethodPointcut을 상속하여 매서드 뿐만아니라, 클래스 이름으로 클래스 필터링 기능을 추가한 포인트컷 등록. -->
	<!-- <bean id="transactionPointcut" class="springbook.learningtest.jdk.NameMatchClassMethodPointcut">
		<property name="mappedClassName" value="*ServiceImpl"/>
		<property name="mappedName" value="upgrade*" />
	</bean> -->
	
	<bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
		<property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
	</bean>
	
	<bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">	<!-- 어드바이스 + 포인트컷을 하나로 묶은 객체인 어드바이저 -->
		<property name="advice" ref="transactionAdvice"/>
		<property name="pointcut" ref="transactionPointcut"/>
	</bean>
	
	
	<!-- UserServiceTest 클래스안의 스태틱클래스를 등록.  -->
	<bean id="testUserService" class="springbook.user.service.UserServiceTest$TestUserService"
		parent="userService"/><!-- userService 빈에 설정해놓은 설정정보를 모두 상속받는다. -->
	
	<!-- <bean id="proxyUserService" class="org.springframework.aop.framework.ProxyFactoryBean">다이나믹 프록시 생성.
		<property name="target" ref="userServiceImpl"/>	부가기능을 적용할 타겟 클래스
		<property name="interceptorNames">어드바이스와 어드바이저를 동시에 여러개 설정해 주는 속성
			<list>
				<value>transactionAdvisor</value>프록시 팩토리 빈에 어드바이저 적용.
			</list>
		</property>
	</bean> -->
	
	
	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="com.mail.server"/>
	</bean> -->
	
	<bean id="mailSender" class="springbook.user.service.DummyMailSender"/>
	
</beans>
